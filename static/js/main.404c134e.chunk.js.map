{"version":3,"sources":["store/actions.ts","utils/check-grid/index.ts","utils/compare-arrays/index.ts","utils/copy-grid/index.ts","utils/create-full-grid/index.ts","utils/fill-grid/index.ts","utils/get-random-index/index.ts","utils/is-in/col/index.ts","utils/is-in/row/index.ts","utils/is-in/square/index.ts","global/index.ts","utils/remove-numbers/index.ts","utils/shuffle/index.ts","utils/solve-grid/index.ts","utils/identify-square/index.ts","store/reducer.ts","store/index.ts","components/grid/block/styles/index.ts","components/grid/block/index.tsx","components/grid/styles/index.ts","components/grid/index.tsx","components/new-game-button/styles/index.ts","components/new-game-button/index.tsx","components/numbers/button/index.tsx","components/numbers/styles/index.ts","components/numbers/index.tsx","components/styles/button/index.ts","components/styles/card/index.ts","components/styles/content/index.ts","components/styles/name/index.ts","components/styles/title/index.ts","core/configure-store/index.ts","core/service-worker/index.ts","styles/global.ts","index.tsx","styles/theme.ts","store/types.ts"],"names":["createGrid","type","types","fillBlock","value","coords","selectBlock","checkGrid","grid","i","j","compareArrays","arr1","arr2","Array","isArray","length","len","copyGrid","gridCopy","r","c","createFullGrid","fillGrid","numbers","row","col","Math","floor","shuffle","isInRow","isInCol","square","identifySquare","isInSquare","getRandomIndex","random","includes","counter","removeNumbers","attempts","backup","global","solveGrid","array","x","push","initialState","reducer","state","action","solvedGrid","challengeGrid","workingGrid","alert","selectedBlock","Container","styled","div","active","puzzle","theme","css","colors","blue","white","kobaltblue","transition","lightBlue","Block","colIndex","rowIndex","useSelector","isActive","isPuzzle","dispatch","useDispatch","data-cy","onClick","Row","Grid","selectedValue","create","useCallback","fill","n","useMousetrap","useEffect","Children","toArray","map","_","NewGameButton","createNewGrid","window","confirm","Button","NumberButton","Numbers","button","Card","Content","Name","h1","Title","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","store","createStore","devToolsEnhancer","persistor","persistStore","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createGlobalStyle","background","darkorange","ReactDOM","render","lightorange","loading","href","target","rel","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","CREATE_GRID","FILL_BLOCK","SELECT_BLOCK"],"mappings":"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","file":"static/js/main.404c134e.chunk.js","sourcesContent":["import { Action, AnyAction } from 'redux';\n\nimport { BLOCK_COORDS, NUMBERS } from '../typings';\n\nimport * as types from './types';\n\nexport const createGrid = (): Action => ({ type: types.CREATE_GRID });\n\nexport const fillBlock = (value: NUMBERS, coords: BLOCK_COORDS): AnyAction => ({\n\tcoords,\n\ttype: types.FILL_BLOCK,\n\tvalue,\n});\n\nexport const selectBlock = (coords: BLOCK_COORDS): AnyAction => ({\n\tcoords,\n\ttype: types.SELECT_BLOCK,\n});\n","import { GRID } from '../../typings';\n\n/**\n * A function to check if the grid is full\n * @param grid A 9x9 array consisting of values from 0-9\n */\nfunction checkGrid(grid: GRID): boolean {\n\tfor (let i = 0; i < 9; i++)\n\t\tfor (let j = 0; j < 9; j++) if (grid[i][j] === 0) return false;\n\treturn true;\n}\n\nexport default checkGrid;\n","/**\n * compares two arrays of any dimensions and returns true if they are equal, otherwise returns false\n * @param arr1 : first array to be compared\n * @param arr2 : second array to be compared\n */\nfunction compareArrays(arr1: any[], arr2: any[]): boolean {\n\tif (!Array.isArray(arr1) && !Array.isArray(arr2)) return arr1 === arr2;\n\n\tif (arr1.length !== arr2.length) return false;\n\tfor (let i = 0, len = arr1.length; i < len; i++)\n\t\tif (!compareArrays(arr1[i], arr2[i])) return false;\n\n\treturn true;\n}\n\nexport default compareArrays;\n","import { GRID, INDEX } from '../../typings';\n\nfunction copyGrid(grid: GRID): GRID {\n\tconst gridCopy: GRID = [\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t];\n\n\tfor (let r: INDEX = 0; r < 9; r++)\n\t\tfor (let c: INDEX = 0; c < 9; c++) gridCopy[r][c] = grid[r][c];\n\n\treturn gridCopy;\n}\n\nexport default copyGrid;\n","import { GRID } from '../../typings';\n\nimport { fillGrid } from '..';\n\n/**\n * A function to create a full valid sudoku grid\n */\nfunction createFullGrid(): GRID {\n\tconst grid: GRID = [\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t];\n\tfillGrid(grid);\n\treturn grid;\n}\n\nexport default createFullGrid;\n","import { GRID, NUMBERS } from '../../typings';\nimport {\n\tcheckGrid,\n\tidentifySquare,\n\tisInCol,\n\tisInRow,\n\tisInSquare,\n\tshuffle,\n} from '../../utils';\n\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n/**\n * a backtracking / recursive function to check all the possible combinations of numbers until a solution is found\n * @param grid 9x9 Sudoku grud\n *\n */\nfunction fillGrid(grid: GRID) {\n\tlet row = 0;\n\tlet col = 0;\n\n\tfor (let i = 0; i < 81; i++) {\n\t\trow = Math.floor(i / 9);\n\t\tcol = i % 9;\n\n\t\tif (grid[row][col] === 0) {\n\t\t\tshuffle(numbers);\n\n\t\t\tfor (let value of numbers) {\n\t\t\t\t// is it not in the grid row?\n\t\t\t\tif (!isInRow({ grid, row, value }))\n\t\t\t\t\tif (!isInCol({ col, grid, value })) {\n\t\t\t\t\t\t// is it not in the grid column?\n\t\t\t\t\t\t// is it not in the grid square?\n\t\t\t\t\t\t// if so...\n\t\t\t\t\t\tconst square = identifySquare({ col, grid, row });\n\t\t\t\t\t\tif (!isInSquare({ square, value })) {\n\t\t\t\t\t\t\t// ...\n\t\t\t\t\t\t\tgrid[row][col] = value;\n\t\t\t\t\t\t\t// check grid if it is full, if so, stop and return true\n\t\t\t\t\t\t\tif (checkGrid(grid)) return true;\n\t\t\t\t\t\t\telse if (fillGrid(grid)) return true;\n\t\t\t\t\t\t\t// otherwise we run fullGrid(grid) again\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tgrid[row][col] = 0;\n}\n\nexport default fillGrid;\n","/**\n * Return a random sudoku grid index in the 0-8 range\n */\nfunction getRandomIndex() {\n\treturn Math.floor(Math.random() * Math.floor(9));\n}\n\nexport default getRandomIndex;\n","import { GRID, NUMBERS } from '../../../typings';\n\ninterface IInput {\n\tcol: number;\n\tgrid: GRID;\n\tvalue: NUMBERS;\n}\n\n/**\n *  A function that returns true if the value is already being used in the current grid column\n * @param param0 Object with 9x9 sudoku Grid, column index and value\n */\nfunction isInCol({ col, grid, value }: IInput): boolean {\n\tfor (let i = 0; i < 9; i++) {\n\t\tif (value === grid[i][col]) return true;\n\t}\n\treturn false;\n}\n\nexport default isInCol;\n","import { GRID, NUMBERS } from '../../../typings';\n\ninterface IInput {\n\tgrid: GRID;\n\trow: number;\n\tvalue: NUMBERS;\n}\n\n/**\n * a function that returns true if the value is already being used in the current grid row\n * @param input Object with 9x9 sudoku grid, row index, and value\n */\nfunction isInRow({ grid, row, value }: IInput): boolean {\n\treturn grid[row].includes(value);\n}\n\nexport default isInRow;\n","import { NUMBERS, SQUARE } from '../../../typings';\n\ninterface IInput {\n\tsquare: SQUARE;\n\tvalue: NUMBERS;\n}\n\n/**\n * A function that returns true if the value is already being used in the current grid square\n * @param param0 Object with 3x3 square and value\n */\nfunction isInSquare({ square, value }: IInput): boolean {\n\treturn [...square[0], ...square[1], ...square[2]].includes(value);\n}\n\nexport default isInSquare;\n","// eslint-disable-next-line\nexport default {\n\tcounter: 0,\n};\n","import global from '../../global';\nimport { GRID } from '../../typings';\nimport { copyGrid, getRandomIndex, solveGrid } from '../../utils';\n\n/**\n * Removes numbers from a full grid to create a sudoku puzzle\n * @param grid : 9x9 sudoku grid\n * @param attempts : number of attempts to solve (higher means more difficult) - default is 5\n */\nfunction removeNumbers(grid: GRID, attempts = 5): GRID {\n\twhile (attempts > 0) {\n\t\tlet row = getRandomIndex();\n\t\tlet col = getRandomIndex();\n\n\t\twhile (grid[row][col] === 0) {\n\t\t\trow = getRandomIndex();\n\t\t\tcol = getRandomIndex();\n\t\t}\n\n\t\tconst backup = grid[row][col];\n\t\tgrid[row][col] = 0;\n\n\t\t// copy grid\n\t\tconst gridCopy = copyGrid(grid);\n\t\t// set a global counter\n\t\tglobal.counter = 0;\n\n\t\t// attempt to solve the grid\n\t\tsolveGrid(gridCopy);\n\n\t\t// if global counter is not 1\n\t\t// grid[row][col] = backup\n\t\t// decrement attempts\n\t\tif (global.counter !== 1) {\n\t\t\tgrid[row][col] = backup;\n\t\t\tattempts--;\n\t\t}\n\t}\n\treturn grid;\n}\n\nexport default removeNumbers;\n","/**\n * An array shuffling function using the Fisher-Yates shuffle algorithm.\n * @param array An array that I want shuffled\n */\nfunction shuffle(array: any[]) {\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n}\n\nexport default shuffle;\n","import global from '../../global';\nimport { GRID, NUMBERS } from '../../typings';\nimport {\n\tcheckGrid,\n\tidentifySquare,\n\tisInCol,\n\tisInRow,\n\tisInSquare,\n} from '../../utils';\n\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n/**\n * A backtracking / recursive function to check all possible combinations of numbers until  a solution is found\n * @param grid A 9x9 array consisting of values from 0-9\n */\nfunction solveGrid(grid: GRID) {\n\tlet row = 0;\n\tlet col = 0;\n\n\tfor (let i = 0; i < 81; i++) {\n\t\trow = Math.floor(i / 9);\n\t\tcol = i % 9;\n\n\t\tif (grid[row][col] === 0) {\n\t\t\tfor (let value of numbers)\n\t\t\t\tif (!isInRow({ grid, row, value }))\n\t\t\t\t\tif (!isInCol({ col, grid, value })) {\n\t\t\t\t\t\tconst square = identifySquare({ col, grid, row });\n\t\t\t\t\t\tif (!isInSquare({ square, value })) {\n\t\t\t\t\t\t\tgrid[row][col] = value;\n\t\t\t\t\t\t\tif (checkGrid(grid)) {\n\t\t\t\t\t\t\t\tglobal.counter++;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (solveGrid(grid)) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\tgrid[row][col] = 0;\n}\n\nexport default solveGrid;\n","import { GRID, SQUARE } from '../../typings';\n\ninterface IInput {\n\tgrid: GRID;\n\trow: number;\n\tcol: number;\n}\n\n/**\n * function that identifies and returns the current square of a given sudoku grid at a row and index\n * @param input Object with 9x9 sudoku grid, row index and column index\n */\n\nfunction identifySquare({ col, grid, row }: IInput): SQUARE {\n\tconst square = [];\n\tif (row < 3) {\n\t\tif (col < 3)\n\t\t\tfor (let x = 0; x < 3; x++) {\n\t\t\t\tsquare.push([grid[x][0], grid[x][1], grid[x][2]]);\n\t\t\t}\n\t\telse if (col < 6)\n\t\t\tfor (let x = 0; x < 3; x++) {\n\t\t\t\tsquare.push([grid[x][3], grid[x][4], grid[x][5]]);\n\t\t\t}\n\t\telse\n\t\t\tfor (let x = 0; x < 3; x++) {\n\t\t\t\tsquare.push([grid[x][6], grid[x][7], grid[x][8]]);\n\t\t\t}\n\t} else if (row < 6) {\n\t\tif (col < 3)\n\t\t\tfor (let x = 3; x < 6; x++) {\n\t\t\t\tsquare.push([grid[x][0], grid[x][1], grid[x][2]]);\n\t\t\t}\n\t\telse if (col < 6)\n\t\t\tfor (let x = 3; x < 6; x++) {\n\t\t\t\tsquare.push([grid[x][3], grid[x][4], grid[x][5]]);\n\t\t\t}\n\t\telse\n\t\t\tfor (let x = 3; x < 6; x++) {\n\t\t\t\tsquare.push([grid[x][6], grid[x][7], grid[x][8]]);\n\t\t\t}\n\t} else {\n\t\tif (col < 3)\n\t\t\tfor (let x = 6; x < 9; x++) {\n\t\t\t\tsquare.push([grid[x][0], grid[x][1], grid[x][2]]);\n\t\t\t}\n\t\telse if (col < 6)\n\t\t\tfor (let x = 6; x < 9; x++) {\n\t\t\t\tsquare.push([grid[x][3], grid[x][4], grid[x][5]]);\n\t\t\t}\n\t\telse\n\t\t\tfor (let x = 6; x < 9; x++) {\n\t\t\t\tsquare.push([grid[x][6], grid[x][7], grid[x][8]]);\n\t\t\t}\n\t}\n\n\treturn square as SQUARE;\n}\n\nexport default identifySquare;\n","import { AnyAction } from 'redux';\nimport { GRID } from '../typings';\nimport {\n\tcompareArrays,\n\tcopyGrid,\n\tcreateFullGrid,\n\tremoveNumbers,\n} from '../utils';\n\nimport { IReducer } from './interfaces';\nimport * as types from './types';\n\nconst initialState: IReducer = {};\n\nfunction reducer(state = initialState, action: AnyAction): IReducer {\n\tswitch (action.type) {\n\t\tcase types.CREATE_GRID: {\n\t\t\tconst solvedGrid = createFullGrid();\n\t\t\tconst gridCopy = copyGrid(solvedGrid);\n\t\t\tconst challengeGrid = removeNumbers(\n\t\t\t\tgridCopy\n\t\t\t\t// , 5\n\t\t\t\t// set a number to increase difficulty\n\t\t\t);\n\t\t\tconst workingGrid = copyGrid(challengeGrid);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tchallengeGrid,\n\t\t\t\tsolvedGrid,\n\t\t\t\tworkingGrid,\n\t\t\t};\n\t\t}\n\n\t\tcase types.FILL_BLOCK: {\n\t\t\tif (state.workingGrid && state.solvedGrid) {\n\t\t\t\tif (state.solvedGrid[action.coords[0]][action.coords[1]] !== action.value) {\n\t\t\t\t\talert('Incorrect option!');\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\tstate.workingGrid[action.coords[0]][action.coords[1]] = action.value;\n\t\t\t\tif (compareArrays(state.workingGrid, state.solvedGrid))\n\t\t\t\t\talert('Yes, you did it!');\n\t\t\t\treturn { ...state, workingGrid: [...state.workingGrid] as GRID };\n\t\t\t}\n\t\t\treturn state;\n\t\t}\n\n\t\tcase types.SELECT_BLOCK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedBlock: action.coords,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import reducer from './reducer';\n\nexport * from './actions';\nexport * from './interfaces';\n\nexport type IReducer = ReturnType<typeof reducer>;\nexport default reducer;\n","import styled, { css } from 'styled-components';\r\n\r\ninterface IProps {\r\n\tactive?: boolean;\r\n\tpuzzle?: boolean;\r\n}\r\n\r\nexport const Container = styled.div<IProps>`\r\n\t${({ active, puzzle, theme }) => css`\r\n\t\talign-items: center;\r\n\t\tbackground-color: ${active ? theme.colors.blue : theme.colors.white};\r\n\t\tborder: solid 1px ${theme.colors.kobaltblue};\r\n\t\tcolor: ${theme.colors.kobaltblue};\r\n\t\tcursor: pointer;\r\n\t\tdisplay: flex;\r\n\t\tflex-grow: 1;\r\n\t\tflex-shrink: 0;\r\n\t\tflex-basis: 0;\r\n\t\tfont-size: 20px;\r\n\t\tfont-weight: ${puzzle ? 'normal' : 'bold'};\r\n\t\theight: fit-content;\r\n\t\tjustify-content: center;\r\n\t\ttransition: ${theme.transition};\r\n\t\tuser-select: none;\r\n\r\n\t\t&:before {\r\n\t\t\tpadding-top: 100%;\r\n\t\t\tcontent: '';\r\n\t\t\tfloat: left;\r\n\t\t}\r\n\r\n\t\t&:hover {\r\n\t\t\tbackground-color: ${theme.colors.lightBlue};\r\n\t\t}\r\n\t`}\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Dispatch, AnyAction } from 'redux';\r\n\r\nimport { IReducer, selectBlock } from '../../../store';\r\nimport { INDEX, N } from '../../../typings';\r\n\r\nimport { Container } from './styles';\r\n\r\ninterface IProps {\r\n\tcolIndex: INDEX;\r\n\trowIndex: INDEX;\r\n}\r\n\r\ninterface IState {\r\n\tisActive: boolean;\r\n\tisPuzzle: boolean;\r\n\tvalue: N;\r\n}\r\n\r\nconst Block: FC<IProps> = ({ colIndex, rowIndex }) => {\r\n\tconst state = useSelector<IReducer, IState>(\r\n\t\t({ challengeGrid, selectedBlock, workingGrid }) => ({\r\n\t\t\tisActive: selectedBlock\r\n\t\t\t\t? selectedBlock[0] === rowIndex && selectedBlock[1] === colIndex\r\n\t\t\t\t: false,\r\n\t\t\tisPuzzle:\r\n\t\t\t\tchallengeGrid && challengeGrid[rowIndex][colIndex] !== 0 ? true : false,\r\n\t\t\tvalue: workingGrid ? workingGrid[rowIndex][colIndex] : 0,\r\n\t\t\t// value: 0,\r\n\t\t})\r\n\t);\r\n\tconst dispatch = useDispatch<Dispatch<AnyAction>>();\r\n\r\n\tfunction handleClick() {\r\n\t\tif (!state.isActive) dispatch(selectBlock([rowIndex, colIndex]));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container\r\n\t\t\tactive={state.isActive}\r\n\t\t\tdata-cy={`block-${rowIndex}-${colIndex}`}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tpuzzle={state.isPuzzle}\r\n\t\t>\r\n\t\t\t{state.value === 0 ? '' : state.value}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Block;\r\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 10px 0;\n`;\n\nexport const Row = styled.div`\n\t${({ theme }) => css`\n\t\tdisplay: flex;\n\t\tflex-flow: row;\n\n\t\t&:nth-child(1) {\n\t\t\tdiv {\n\t\t\t\tborder-top: solid 4px ${theme.colors.kobaltblue};\n\t\t\t}\n\t\t}\n\n\t\t&:nth-child(3),\n\t\t&:nth-child(6) {\n\t\t\tdiv {\n\t\t\t\tborder-bottom: solid 3px ${theme.colors.kobaltblue};\n\t\t\t}\n\t\t}\n\n\t\t&:nth-child(9) {\n\t\t\tborder-bottom: solid 4px ${theme.colors.kobaltblue};\n\t\t}\n\n\t\tdiv {\n\t\t\t&:nth-child(1) {\n\t\t\t\tborder-left: solid 4px ${theme.colors.kobaltblue};\n\t\t\t}\n\t\t\t&:nth-child(3),\n\t\t\t&:nth-child(6),\n\t\t\t&:nth-child(9) {\n\t\t\t\tborder-right: solid 4px ${theme.colors.kobaltblue};\n\t\t\t}\n\t\t\t&:nth-child(4),\n\t\t\t&:nth-child(7) {\n\t\t\t\tborder-left: none;\n\t\t\t}\n\t\t}\n\t`}\n`;\n","import React, { Children, FC, useCallback, useEffect } from 'react';\r\nimport useMousetrap from 'react-hook-mousetrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AnyAction, Dispatch } from 'redux';\r\n\r\nimport { createGrid, fillBlock, IReducer, selectBlock } from '../../store';\r\nimport { BLOCK_COORDS, GRID, INDEX, N, NUMBERS } from '../../typings';\r\n\r\nimport Block from './block';\r\nimport { Container, Row } from './styles';\r\n\r\ninterface IState {\r\n\tselectedBlock?: BLOCK_COORDS;\r\n\tselectedValue: N;\r\n\tsolvedGrid?: GRID;\r\n}\r\n\r\nconst Grid: FC = () => {\r\n\tconst state = useSelector<IReducer, IState>(\r\n\t\t({ selectedBlock, solvedGrid, workingGrid }) => ({\r\n\t\t\tselectedBlock,\r\n\t\t\tselectedValue:\r\n\t\t\t\tworkingGrid && selectedBlock\r\n\t\t\t\t\t? workingGrid[selectedBlock[0]][selectedBlock[1]]\r\n\t\t\t\t\t: 0,\r\n\t\t\tsolvedGrid,\r\n\t\t})\r\n\t);\r\n\tconst dispatch = useDispatch<Dispatch<AnyAction>>();\r\n\r\n\t// UseCallback dispatches the createGrid\r\n\tconst create = useCallback(() => dispatch(createGrid()), [dispatch]);\r\n\r\n\tconst fill = useCallback(\r\n\t\t(n: NUMBERS) => {\r\n\t\t\tif (state.selectedBlock && state.selectedValue === 0)\r\n\t\t\t\tdispatch(fillBlock(n, state.selectedBlock));\r\n\t\t},\r\n\t\t[dispatch, state.selectedBlock, state.selectedValue]\r\n\t);\r\n\r\n\tfunction moveDown() {\r\n\t\tif (state.selectedBlock && state.selectedBlock[0] < 8)\r\n\t\t\tdispatch(\r\n\t\t\t\tselectBlock([(state.selectedBlock[0] + 1) as INDEX, state.selectedBlock[1]])\r\n\t\t\t);\r\n\t}\r\n\r\n\tfunction moveLeft() {\r\n\t\tif (state.selectedBlock && state.selectedBlock[1] > 0)\r\n\t\t\tdispatch(\r\n\t\t\t\tselectBlock([state.selectedBlock[0], (state.selectedBlock[1] - 1) as INDEX])\r\n\t\t\t);\r\n\t}\r\n\r\n\tfunction moveRight() {\r\n\t\tif (state.selectedBlock && state.selectedBlock[1] < 8)\r\n\t\t\tdispatch(\r\n\t\t\t\tselectBlock([state.selectedBlock[0], (state.selectedBlock[1] + 1) as INDEX])\r\n\t\t\t);\r\n\t}\r\n\r\n\tfunction moveUp() {\r\n\t\tif (state.selectedBlock && state.selectedBlock[0] > 0)\r\n\t\t\tdispatch(\r\n\t\t\t\tselectBlock([(state.selectedBlock[0] - 1) as INDEX, state.selectedBlock[1]])\r\n\t\t\t);\r\n\t}\r\n\r\n\tuseMousetrap('1', () => fill(1));\r\n\tuseMousetrap('2', () => fill(2));\r\n\tuseMousetrap('3', () => fill(3));\r\n\tuseMousetrap('4', () => fill(4));\r\n\tuseMousetrap('5', () => fill(5));\r\n\tuseMousetrap('6', () => fill(6));\r\n\tuseMousetrap('7', () => fill(7));\r\n\tuseMousetrap('8', () => fill(8));\r\n\tuseMousetrap('9', () => fill(9));\r\n\tuseMousetrap('down', moveDown);\r\n\tuseMousetrap('left', moveLeft);\r\n\tuseMousetrap('right', moveRight);\r\n\tuseMousetrap('up', moveUp);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!state.solvedGrid) create();\r\n\t}, [create, state.solvedGrid]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{Children.toArray(\r\n\t\t\t\t[...Array(9)].map((_, rowIndex) => (\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t{Children.toArray(\r\n\t\t\t\t\t\t\t[...Array(9)].map((_, colIndex) => (\r\n\t\t\t\t\t\t\t\t<Block colIndex={colIndex as INDEX} rowIndex={rowIndex as INDEX} />\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Grid;\r\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-flow: row;\n\twidth: 100%;\n`;\n","import React, { FC, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Action, Dispatch } from 'redux';\n\nimport { Button } from '../../components';\nimport { createGrid } from '../../store';\nimport { Container } from './styles/index';\n\nconst NewGameButton: FC = () => {\n\tconst dispatch = useDispatch<Dispatch<Action>>();\n\n\tconst createNewGrid = useCallback(() => {\n\t\tif (window.confirm('Are you sure you want to start a new game?'))\n\t\t\tdispatch(createGrid());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Button onClick={createNewGrid}>New Game</Button>\n\t\t</Container>\n\t);\n};\n\nexport default NewGameButton;\n","import React, { FC, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AnyAction, Dispatch } from 'redux';\n\nimport { Button } from '../../../components';\nimport { fillBlock, IReducer } from '../../../store';\nimport { BLOCK_COORDS, N, NUMBERS } from '../../../typings';\n\ninterface IProps {\n\tvalue: NUMBERS;\n}\n\ninterface IState {\n\tselectedBlock?: BLOCK_COORDS;\n\tselectedValue: N;\n}\n\nconst NumberButton: FC<IProps> = ({ value }) => {\n\tconst state = useSelector<IReducer, IState>(\n\t\t({ selectedBlock, workingGrid }) => ({\n\t\t\tselectedBlock,\n\t\t\tselectedValue:\n\t\t\t\tworkingGrid && selectedBlock\n\t\t\t\t\t? workingGrid[selectedBlock[0]][selectedBlock[1]]\n\t\t\t\t\t: 0,\n\t\t})\n\t);\n\tconst dispatch = useDispatch<Dispatch<AnyAction>>();\n\n\tconst fill = useCallback(() => {\n\t\tif (state.selectedBlock && state.selectedValue === 0)\n\t\t\tdispatch(fillBlock(value, state.selectedBlock));\n\t}, [dispatch, state.selectedBlock, state.selectedValue, value]);\n\n\treturn <Button onClick={fill}>{value}</Button>;\n};\n\nexport default NumberButton;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-flow: row;\n\twidth: auto;\n`;\n","import React, { FC } from 'react';\n\nimport { NUMBERS } from '../../typings';\n\nimport Button from './button';\nimport { Container } from './styles';\n\nconst Numbers: FC = () => (\n\t<Container>\n\t\t{([1, 2, 3, 4, 5, 6, 7, 8, 9] as NUMBERS[]).map((value) => (\n\t\t\t<Button key={value} value={value} />\n\t\t))}\n\t</Container>\n);\n\nexport default Numbers;\n","import styled, { css } from 'styled-components';\n\nexport const Button = styled.button`\n\t${({ theme }) => css`\n\t\talign-items: center;\n\t\tbackground-color: ${theme.colors.kobaltblue};\n\t\tborder: 2px solid ${theme.colors.kobaltblue};\n\t\tborder-radius: 4px;\n\t\tcolor: ${theme.colors.white};\n\t\tcursor: pointer;\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\theight: 40px;\n\t\tjustify-content: center;\n\t\tmargin: 4px 2px;\n\t\tmin-height: 40px;\n\t\topacity: 0.9;\n\t\ttransition: ${theme.transition};\n\t\ttransition: all 0.2s;\n\n\t\t&:hover {\n\t\t\ttransform: translateY(-2px);\n\t\t\tbox-shadow: 0 5px 5px rgba(0, 0, 0, 0.2);\n\t\t}\n\n\t\t&:active {\n\t\t\ttransform: translateY(0px);\n\t\t\toutline: none;\n\t\t}\n\t`}\n`;\n","import styled, { css } from 'styled-components';\n\nexport const Card = styled.div`\n\t${({ theme }) => css`\n\t\tbackground-color: ${theme.colors.white};\n\t\tborder-radius: 15px;\n\t\tdisplay: flex;\n\t\tflex: 0 1 auto;\n\t\tflex-direction: column;\n\t\tmax-height: max-content;\n\t\tpadding: 15px;\n\t`}\n`;\n","import styled from 'styled-components';\n\nexport const Content = styled.div`\n\tmax-width: 400px;\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\tjustify-content: center;\n`;\n","import styled, { css } from 'styled-components';\n\nexport const Name = styled.h1`\n\t${({ theme }) => css`\n\t\tcolor: ${theme.colors.white};\n\t\tmargin-top: 5px;\n\t\ttext-align: center;\n\t\tfont-size: 15px;\n\t`}\n`;\n","import styled, { css } from 'styled-components';\n\nexport const Title = styled.h1`\n\t${({ theme }) => css`\n\t\tcolor: ${theme.colors.white};\n\t\tmargin-top: 0;\n\t\ttext-align: center;\n\t`}\n`;\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport reducer from '../../store';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nfunction configureStore() {\n\tconst store = createStore(persistedReducer, devToolsEnhancer({}));\n\tconst persistor = persistStore(store);\n\treturn { persistor, store };\n}\n\nexport default configureStore;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import { createGlobalStyle, css } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  ${({ theme }) => css`\r\n\t\t\thtml {\r\n\t\t\t\theight: 100%;\r\n\r\n\t\t\t\tbody {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmargin: 0;\r\n\r\n\t\t\t\t\t#root {\r\n\t\t\t\t\t\tbackground: ${theme.colors.background};\r\n\t\t\t\t\t\tcolor: ${theme.colors.darkorange};\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\tfont-family: sans-serif;\r\n\t\t\t\t\t\theight: 100%;\r\n\t\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t\t\tpadding: 15px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`}\r\n`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ThemeProvider } from 'styled-components';\n\nimport {\n\tCard,\n\tContent,\n\tGrid,\n\tNewGameButton,\n\tName,\n\tNumbers,\n\tTitle,\n} from './components';\nimport { configureStore, register } from './core';\nimport { GlobalStyles, theme } from './styles';\n\nconst { persistor, store } = configureStore();\n\nReactDOM.render(\n\t<ThemeProvider theme={theme}>\n\t\t<GlobalStyles />\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<Content>\n\t\t\t\t\t<Title>Sudoku</Title>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<NewGameButton />\n\t\t\t\t\t\t<Grid />\n\t\t\t\t\t\t<Numbers />\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Name>\n\t\t\t\t\t\tAlex -{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='http://www.github.com/team-cake'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noreferrer'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Name>\n\t\t\t\t</Content>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</ThemeProvider>,\n\tdocument.getElementById('root')\n);\n\nregister();\n","// eslint-disable-next-line\r\nexport default {\r\n\tcolors: {\r\n\t\t// background: 'radial-gradient(#282c34cc, #282c34)',\r\n\t\t// background: '#FFEFD5',\r\n\t\t// black: '#282c34',\r\n\t\tblue: '#a0e9fd',\r\n\t\twhite: 'white',\r\n\t\tbackground: 'radial-gradient(#a0e9fd, #16697a)',\r\n\t\tkobaltblue: '#16697a',\r\n\t\tdarkorange: '#db6400',\r\n\t\tlightorange: '#ffa62b',\r\n\t\tlightBlue: '#caf3fe',\r\n\t},\r\n\ttransition: '0.3s',\r\n};\r\n","export const CREATE_GRID = 'CREATE_GRID';\nexport const FILL_BLOCK = 'FILL_BLOCK';\nexport const SELECT_BLOCK = 'SELECT_BLOCK';\n"],"sourceRoot":""}